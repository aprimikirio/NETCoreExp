@model List<MVCGame.Models.Square>
<script src="https://unpkg.com/konva@2.4.2/konva.min.js"></script>

<style>
    #container {
        width: 640px;
        height: 480px;
        margin: auto;
        border-style: solid;
        border-width: 1px;
    }
</style>

<div>
    <h3>WELCOME TO "@ViewData["GameName"]" ROOM</h3>
    <div id="container">
        <canvas id="mainCanvas" width="640" height="480">
            Canvas
        </canvas>
    </div>
</div>

<script>

    var canvas = document.getElementById("mainCanvas"),
        context = canvas.getContext("2d");

    var resx = 0, resy = 0;

    // Получение всех
    function GetSquares() {
        $.ajax({
            url: '/api/Squares',
            type: 'GET',
            contentType: "application/json",
            success: function (Squares) {
                $.each(Squares, function (index, Square) {
                    context.clearRect(0, 0, 640, 480);
                    context.strokeRect(Square.x, Square.y, Square.edge, Square.edge);
                    resx = Square.x; resy = Square.y;
                })
                //$(".publicationsbody").append(rows);
            }
        });
        console.log("getty" + resx + " " + resy);
    }

    // Изменение
    function EditSquare(squareId, squareGameId, squareEdge, squareX, squareY) {
        $.ajax({
            url: "../api/Squares",
            contentType: "application/json",
            method: "PUT",
            data: JSON.stringify({
                id: squareId,
                gameId: squareGameId,
                edge: squareEdge,
                x: squareX,
                y: squareY
            })
        })
        console.log("putty");
    }

    function draw()
    {
        GetSquares();
        EditSquare(1, 1, 100, resx + 1, resy + 1);
    }

    // загрузка
    //GetSquares();
    setInterval(draw, 10);
    //EditSquare(1, 1, 100, 10, 10);
    
</script>



